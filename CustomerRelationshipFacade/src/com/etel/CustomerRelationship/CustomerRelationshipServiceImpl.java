package com.etel.CustomerRelationship;

import java.util.Date;
import java.util.Map;

import com.cifsdb.data.Tbcifindividual;
import com.cifsdb.data.Tbcifmain;
import com.cifsdb.data.Tbcodetable;
import com.cifsdb.data.Tbcustomerrelationship;
import com.cifsdb.data.Tbmanagement;
import com.coopdb.data.Tbcustomerrelationshiplos;
import com.coopdb.data.Tblosindividual;
import com.coopdb.data.Tblosmain;
import com.etel.common.service.DBService;
import com.etel.common.service.DBServiceImpl;
import com.etel.common.service.DBServiceImplCIF;
import com.etel.utils.HQLUtil;
import com.etel.utils.UserUtil;

public class CustomerRelationshipServiceImpl implements CustomerRelationshipService {

	@Override
	public String saveCustRelationshipCorp(String cifno, String relCode, String relCifno) {
		// TODO Auto-generated method stub
		DBService dbService = new DBServiceImplCIF();
		String flag = "Failed";
		Map<String, Object> params = HQLUtil.getMap();
		try {
			System.out.println("---------- START CREATION OF CUSTOMER RELATIONSHIP --------------");
			params.put("cifno", cifno);
			System.out.println("------- CIFNO ------- " + cifno);
			params.put("relCode", relCode);
			System.out.println("------- RELCODE ------ " + relCode);
			params.put("relcifno", relCifno);
			System.out.println("------- RELCIFNO ------ " + relCifno);
			Tbmanagement mngt = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE "
					+ "cifno=:cifno and relationshipcode=:relCode AND relatedcifno=:relcifno", params);

			Tbcifmain main = (Tbcifmain) dbService.executeUniqueHQLQuery("FROM Tbcifmain WHERE " + "cifno=:cifno",
					params);
			if (mngt != null) {
				/**Create Relationship Record
				 * Director
				 * Officer
				 * Stockholder/Shareholder
				 * **/
				if (mngt.getRelationshipcode().equalsIgnoreCase("DR")
						|| mngt.getRelationshipcode().equalsIgnoreCase("OFF")
						|| mngt.getRelationshipcode().equalsIgnoreCase("SHA")
						|| mngt.getRelationshipcode().equalsIgnoreCase("GM")) {
					Tbcustomerrelationship cust = new Tbcustomerrelationship();
					cust.setMaincifno(main.getCifno());
					cust.setMaincifname(main.getFullname());
					cust.setRelatedcifno(mngt.getRelatedcifno());
					if(mngt.getCustomertype().equals("1")){
					cust.setRelatedcifname(
							mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
					}else if(mngt.getCustomertype().equals("2")){
						cust.setRelatedcifname(mngt.getCorporatename());
					}
					cust.setRelationshipcode(mngt.getRelationshipcode());
					cust.setDateadded(new Date());
					cust.setMngempid(mngt.getMngempid());
					cust.setAddedby(UserUtil.securityService.getUserName());
					params.put("codedesc", cust.getRelationshipcode());
					Tbcodetable rel = (Tbcodetable) dbService.executeUniqueHQLQuery(
							"FROM Tbcodetable where " + "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
							params);
					if (rel != null) {
						cust.setRelationshipdesc(rel.getDesc1());
					}
					cust.setIsautogenerated(true);
					if (dbService.save(cust)) {
						cust.setMaincifno(mngt.getRelatedcifno());
						if(mngt.getCustomertype().equals("1")){
						cust.setMaincifname(
								mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
						}else if(mngt.getCustomertype().equals("2")){
							cust.setMaincifname(mngt.getCorporatename());
						}
						cust.setRelatedcifno(main.getCifno());
						cust.setRelatedcifname(main.getFullname());
						cust.setRelationshipcode("EMR");
						cust.setDateadded(new Date());
						cust.setAddedby(UserUtil.securityService.getUserName());
						cust.setMngempid(mngt.getMngempid());
						params.put("codedesc", cust.getRelationshipcode());
						rel = (Tbcodetable) dbService.executeUniqueHQLQuery(
								"FROM Tbcodetable WHERE " + "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
								params);
						if (rel != null) {
							cust.setRelationshipdesc(rel.getDesc1());
						}
						cust.setIsautogenerated(true);
						dbService.save(cust);
						flag = "Success";

					}
					/**Create Relationship Record
					 * Signatories
					 * **/
				} else if (mngt.getRelationshipcode().equalsIgnoreCase("SIG")) {
					Tbcustomerrelationship cust = new Tbcustomerrelationship();
					cust.setMaincifno(main.getCifno());
					cust.setMaincifname(main.getFullname());
					cust.setRelatedcifno(mngt.getRelatedcifno());
					cust.setRelatedcifname(
							mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
					cust.setRelationshipcode(mngt.getRelationshipcode());
					cust.setDateadded(new Date());
					cust.setAddedby(UserUtil.securityService.getUserName());
					cust.setMngempid(mngt.getMngempid());
					params.put("codedesc", cust.getRelationshipcode());
					Tbcodetable rel = (Tbcodetable) dbService.executeUniqueHQLQuery(
							"FROM Tbcodetable where " + "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
							params);
					if (rel != null) {
						cust.setRelationshipdesc(rel.getDesc1());
					}
					cust.setIsautogenerated(true);
					if (dbService.save(cust)) {
						cust.setMaincifno(mngt.getRelatedcifno());
						cust.setMaincifname(
								mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
						cust.setRelatedcifno(main.getCifno());
						cust.setRelatedcifname(main.getFullname());
						cust.setRelationshipcode("SIG");
						cust.setDateadded(new Date());
						cust.setAddedby(UserUtil.securityService.getUserName());
						cust.setMngempid(mngt.getMngempid());
						params.put("codedesc", cust.getRelationshipcode());
						rel = (Tbcodetable) dbService.executeUniqueHQLQuery(
								"FROM Tbcodetable WHERE " + "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
								params);
						if (rel != null) {
							cust.setRelationshipdesc(rel.getDesc1());
						}
						cust.setIsautogenerated(true);
						dbService.save(cust);
						flag = "Success";

					}

				}
				/**Create Relationship Record
				 * OWN - Sole Proprietorship
				 * P - Partnership
				 * **/
				else if (mngt.getRelationshipcode().equalsIgnoreCase("OWN") || mngt.getRelationshipcode().equalsIgnoreCase("P")
						|| mngt.getRelationshipcode().equalsIgnoreCase("GM")) {
					Tbcustomerrelationship cust = new Tbcustomerrelationship();
					cust.setMaincifno(main.getCifno());
					cust.setMaincifname(main.getFullname());
					cust.setRelatedcifno(mngt.getRelatedcifno());
					cust.setRelatedcifname(
							mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
					cust.setRelationshipcode(mngt.getRelationshipcode());
					cust.setDateadded(new Date());
					cust.setAddedby(UserUtil.securityService.getUserName());
					cust.setMngempid(mngt.getMngempid());
					params.put("codedesc", cust.getRelationshipcode());
					Tbcodetable rel = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable where "
							+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
							params);
					if (rel != null) {
						cust.setRelationshipdesc(rel.getDesc1());
					}
					cust.setIsautogenerated(true);
					if (dbService.save(cust)) {
						cust.setMaincifno(mngt.getRelatedcifno());
						cust.setMaincifname(
								mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
						cust.setRelatedcifno(main.getCifno());
						cust.setRelatedcifname(main.getFullname());
						cust.setRelationshipcode("BUS");
						cust.setDateadded(new Date());
						cust.setAddedby(UserUtil.securityService.getUserName());
						cust.setMngempid(mngt.getMngempid());
						params.put("codedesc", cust.getRelationshipcode());
						rel = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
								+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
								params);
						if (rel != null) {
							cust.setRelationshipdesc(rel.getDesc1());
						}
						cust.setIsautogenerated(true);
						dbService.save(cust);
						flag = "Success";

					}

				}
				/**Create Relationship Record
				 * OTH - Others 
				 * **/
				else if (mngt.getRelationshipcode().equalsIgnoreCase("OTH")) {
					Tbcustomerrelationship cust = new Tbcustomerrelationship();
					cust.setMaincifno(main.getCifno());
					cust.setMaincifname(main.getFullname());
					cust.setRelatedcifno(mngt.getRelatedcifno());
					cust.setRelatedcifname(
							mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
					cust.setRelationshipcode("EMP");
					cust.setDateadded(new Date());
					cust.setAddedby(UserUtil.securityService.getUserName());
					cust.setMngempid(mngt.getMngempid());
					params.put("codedesc", cust.getRelationshipcode());
					Tbcodetable rel = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable where "
							+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
							params);
					if (rel != null) {
						cust.setRelationshipdesc(rel.getDesc1());
					}
					cust.setIsautogenerated(true);
					if (dbService.save(cust)) {
						cust.setMaincifno(mngt.getRelatedcifno());
						cust.setMaincifname(
								mngt.getLastname() + ", " + mngt.getFirstname() + " " + mngt.getMiddlename());
						cust.setRelatedcifno(main.getCifno());
						cust.setRelatedcifname(main.getFullname());
						cust.setRelationshipcode("EMR");
						cust.setDateadded(new Date());
						cust.setAddedby(UserUtil.securityService.getUserName());
						cust.setMngempid(mngt.getMngempid());
						params.put("codedesc", cust.getRelationshipcode());
						rel = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
								+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc",
								params);
						if (rel != null) {
							cust.setRelationshipdesc(rel.getDesc1());
						}
						cust.setIsautogenerated(true);
						dbService.save(cust);
						flag = "Success";

					}

				}
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String deleteRelCorp(String cifno, String relCode, String relCifno,String mngempid) {
		// TODO Auto-generated method stub
		DBService dbService = new DBServiceImplCIF();
		String flag = "Failed";
		Map<String,Object> params = HQLUtil.getMap();
		try {
			params.put("cifno", cifno);
			params.put("relcode", relCode);
			params.put("relcifno", relCifno);
			params.put("mngempid", mngempid);
			System.out.println(">>>>>>>>>>>>>DELETE CUSTOMER RELATIONSHIP<<<<<<<<<<<<<<");
			System.out.println("delete cust cifno: "+cifno+" relcode: "+relCode+" relcifno: "+relCifno+" mngempid :"+mngempid);
			
			if( (Integer) dbService.execStoredProc(
					"DELETE FROM TBCUSTOMERRELATIONSHIP WHERE "
							+ "maincifno=:cifno AND mngempid=:mngempid AND relatedcifno=:relcifno",
					params, null, 2, null) > 0) {
				
					dbService.execStoredProc("DELETE FROM TBCUSTOMERRELATIONSHIP WHERE "
								+ "maincifno=:relcifno AND mngempid=:mngempid AND relatedcifno=:cifno",
						params, null, 2, null);
						flag = "Success";
						System.out.println(">>>>>>>>>END<<<<<<<<<<< CUSTOMER RELATIONSHIP DELETED >>>>>>>>>>");
			}

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String saveCustRelParSps(String cifno) {
		// TODO Auto-generated method stub
		DBService dbService = new DBServiceImplCIF();
		Map<String,Object> params = HQLUtil.getMap();
		String flag = "Failed";
		try {
			params.put("cifno", cifno);
			System.out.println("----- INDIV CIFNO ----- " +cifno);
			Tbcifmain main = (Tbcifmain)dbService.executeUniqueHQLQuery("FROM Tbcifmain WHERE cifno=:cifno", params);
			
			if(main != null){
				System.out.println("----- PASS 1 ------");
				Tbcifindividual indiv = (Tbcifindividual)dbService.executeUniqueHQLQuery("FROM Tbcifindividual WHERE cifno=:cifno", params);
				String spsFname = indiv.getSpousefirstname() == null ? "":indiv.getSpousefirstname();
				String spsLname = indiv.getSpouselastname() == null ? "":indiv.getSpouselastname();
				String spsMname = indiv.getSpousemiddlename() == null ? "":indiv.getSpousemiddlename();
				String spsSuf = indiv.getSpousesuffix() == null ? "":indiv.getSpousesuffix();
				String spsFullname = spsLname+", "+spsFname+" "+spsSuf+" "+spsMname;
				String fatFname = indiv.getFatherfirstname() == null ? "":indiv.getFatherfirstname();
				String fatLname = indiv.getFatherlastname() == null ? "":indiv.getFatherlastname();
				String fatMname = indiv.getFathermiddlename() == null ? "":indiv.getFathermiddlename();
				String fatSuf = indiv.getFathersuffix() == null ? "":indiv.getFathersuffix();
				String fatFullname = fatLname+", "+fatFname+" "+fatSuf+" "+fatMname;
				String motFname = indiv.getMotherfirstname() == null ? "":indiv.getMotherfirstname();
				String motLname = indiv.getMotherlastname() == null ? "":indiv.getMotherlastname();
				String motMname = indiv.getMothermiddlename() == null ? "":indiv.getMothermiddlename();
				String motSuf = indiv.getMothersuffix() == null ? "":indiv.getMothersuffix();
				String motFullname = motLname+", "+motFname+" "+motSuf+" "+motMname;
				String beneFname = indiv.getBeneficiaryfirstname() == null ? "":indiv.getBeneficiaryfirstname();
				String beneLname = indiv.getBeneficiarylastname() == null ? "":indiv.getBeneficiarylastname();
				String beneMname = indiv.getBeneficiarymiddlename() == null ? "":indiv.getBeneficiarymiddlename();
				String beneSuf = indiv.getBeneficiarysuffix() == null ? "":indiv.getBeneficiarysuffix();
				String beneFullname = beneLname+", "+beneFname+" "+beneSuf+" "+beneMname;
				if(indiv != null){
					System.out.println("----- PASS 2 -----");
//					if(indiv.getCivilstatus() != null && (indiv.getCivilstatus().equals("2") || indiv.getCivilstatus().equals("4"))){
					/** Create Relationship Spouse **/
					if(indiv.getSpousecifno() != null){
						params.put("spscifno", indiv.getSpousecifno());
						if((Integer)dbService.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationship "
								+ "WHERE maincifno=:cifno and relationshipcode='SPS' and "
								+ "relatedcifno=:spscifno", params, null, 0, null) > 0 && (Integer)dbService.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationship WHERE maincifno=:spscifno "
										+ "AND relationshipcode='SPS' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="sps exist";
						}
						if(flag == "sps exist"){
							System.out.println("Existing Spouse Relationship");
								//do nothing
						}else{
							System.out.println("----- SPOUSE PASS 1 ------");
							Tbcustomerrelationship sps = new Tbcustomerrelationship();
							sps.setMaincifno(main.getCifno());
							sps.setMaincifname(main.getFullname());
							sps.setRelatedcifno(indiv.getSpousecifno());
							sps.setRelatedcifname(spsFullname);
							sps.setRelationshipcode("SPS");
							sps.setAddedby(UserUtil.securityService.getUserName());
							sps.setDateadded(new Date());
							sps.setMngempid(main.getCifno());
							params.put("codedesc", sps.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								sps.setRelationshipdesc(rel.getDesc1());
							}
							sps.setIsautogenerated(true);
							if(dbService.save(sps)){
								System.out.println("----- SPOUSE PASS 2 ------");
								sps.setMaincifno(indiv.getSpousecifno());
								sps.setMaincifname(spsFullname);
								sps.setRelatedcifno(main.getCifno());
								sps.setRelatedcifname(main.getFullname());
								sps.setRelationshipcode("SPS");
								sps.setAddedby(UserUtil.securityService.getUserName());
								sps.setDateadded(new Date());
								sps.setMngempid(main.getCifno());
								params.put("codedesc", sps.getRelationshipcode());
								rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									sps.setRelationshipdesc(rel.getDesc1());
								}
								sps.setIsautogenerated(true);
								dbService.save(sps);
								flag = "Success";
								System.out.println("SPOUSE RELATIONSHIP CREATED");
							}
						}
					}
					/** Create Relationship Father **/
					if(indiv.getFathercifno() != null){
						params.put("fatcifno", indiv.getFathercifno());
						if((Integer)dbService.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationship "
								+ "WHERE maincifno=:cifno and relationshipcode='PAR' and "
								+ "relatedcifno=:fatcifno", params, null, 0, null) > 0 && (Integer)dbService.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationship WHERE maincifno=:fatcifno "
										+ "AND relationshipcode='CHI' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="father exist";
						}
						if(flag == "father exist"){
							System.out.println("Existing Father Relationship");
								//do nothing
						}else{
							System.out.println("----- FATHER PASS 1 ------");
							Tbcustomerrelationship father = new Tbcustomerrelationship();
							father.setMaincifno(main.getCifno());
							father.setMaincifname(main.getFullname());
							father.setRelatedcifno(indiv.getFathercifno());
							father.setRelatedcifname(fatFullname);
							father.setRelationshipcode("PAR");
							father.setAddedby(UserUtil.securityService.getUserName());
							father.setDateadded(new Date());
							father.setMngempid(main.getCifno());
							params.put("codedesc", father.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								father.setRelationshipdesc(rel.getDesc1());
							}
							father.setIsautogenerated(true);
							if(dbService.save(father)){
								System.out.println("----- FATHER PASS 2 ------");
								father.setMaincifno(indiv.getFathercifno());
								father.setMaincifname(fatFullname);
								father.setRelatedcifno(main.getCifno());
								father.setRelatedcifname(main.getFullname());
								father.setRelationshipcode("CHI");
								father.setAddedby(UserUtil.securityService.getUserName());
								father.setDateadded(new Date());
								father.setMngempid(main.getCifno());
								params.put("codedesc", father.getRelationshipcode());
								rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									father.setRelationshipdesc(rel.getDesc1());
								}
								father.setIsautogenerated(true);
								dbService.save(father);
								flag = "Success";
								System.out.println("FATHER RELATIONSHIP CREATED");
							}
						}
					}	
					/** Create Relationship Mother **/
					if(indiv.getMothercifno() != null){
						params.put("motcifno", indiv.getMothercifno());
						if((Integer)dbService.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationship "
								+ "WHERE maincifno=:cifno and relationshipcode='PAR' and "
								+ "relatedcifno=:motcifno", params, null, 0, null) > 0 && (Integer)dbService.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationship WHERE maincifno=:motcifno "
										+ "AND relationshipcode='CHI' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="mother exist";
						}
						if(flag == "mother exist"){
							System.out.println("Existing Mother Relationship");
								//do nothing
						}else{
							System.out.println("----- MOTHER PASS 1 ------");
							Tbcustomerrelationship mother = new Tbcustomerrelationship();
							mother.setMaincifno(main.getCifno());
							mother.setMaincifname(main.getFullname());
							mother.setRelatedcifno(indiv.getMothercifno());
							mother.setRelatedcifname(motFullname);
							mother.setRelationshipcode("PAR");
							mother.setAddedby(UserUtil.securityService.getUserName());
							mother.setDateadded(new Date());
							mother.setMngempid(main.getCifno());
							params.put("codedesc", mother.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								mother.setRelationshipdesc(rel.getDesc1());
							}
							mother.setIsautogenerated(true);
							if(dbService.save(mother)){
								System.out.println("----- MOTHER PASS 2 ------");
								mother.setMaincifno(indiv.getMothercifno());
								mother.setMaincifname(motFullname);
								mother.setRelatedcifno(main.getCifno());
								mother.setRelatedcifname(main.getFullname());
								mother.setRelationshipcode("CHI");
								mother.setAddedby(UserUtil.securityService.getUserName());
								mother.setDateadded(new Date());
								mother.setMngempid(main.getCifno());
								params.put("codedesc", mother.getRelationshipcode());
								rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									mother.setRelationshipdesc(rel.getDesc1());
								}
								mother.setIsautogenerated(true);
								dbService.save(mother);
								flag = "Success";
								System.out.println("MOTHER RELATIONSHIP CREATED");
							}
						}
					}		
//					}
					/** Create Relationship Beneficiary **/
					if(indiv.getBeneficiarycifno() != null){
//						System.out.println(">>>BENEFICIARY<<<<<"+indiv.getBeneficiarycifno());
						params.put("benecifno", indiv.getBeneficiarycifno());
						if((Integer)dbService.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationship "
								+ "WHERE maincifno=:cifno and relationshipcode='BEN' and "
								+ "relatedcifno=:benecifno", params, null, 0, null) > 0 && (Integer)dbService.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationship WHERE maincifno=:benecifno "
										+ "AND relationshipcode='BENY' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="beneficiary exist";
						}
						if(flag == "beneficiary exist"){
							System.out.println("Existing Beneficiary Relationship");
								//do nothing
						}else{
							System.out.println("----- BENEFICIARY PASS 1 ------");
							Tbcustomerrelationship beneficiary = new Tbcustomerrelationship();
							beneficiary.setMaincifno(main.getCifno());
							beneficiary.setMaincifname(main.getFullname());
							beneficiary.setRelatedcifno(indiv.getBeneficiarycifno());
//							System.out.println(beneFullname);
							beneficiary.setRelatedcifname(beneFullname);
							beneficiary.setRelationshipcode("BENY");
							beneficiary.setAddedby(UserUtil.securityService.getUserName());
							beneficiary.setDateadded(new Date());
							beneficiary.setMngempid(main.getCifno());
							params.put("codedesc", beneficiary.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								beneficiary.setRelationshipdesc(rel.getDesc1());
							}
							beneficiary.setIsautogenerated(true);
							if(dbService.save(beneficiary)){
								System.out.println("----- BENEFICIARY PASS 2 ------");
								beneficiary.setMaincifno(indiv.getBeneficiarycifno());
								beneficiary.setMaincifname(beneFullname);
								beneficiary.setRelatedcifno(main.getCifno());
								beneficiary.setRelatedcifname(main.getFullname());
								beneficiary.setRelationshipcode("BEN");
								beneficiary.setAddedby(UserUtil.securityService.getUserName());
								beneficiary.setDateadded(new Date());
								beneficiary.setMngempid(main.getCifno());
								params.put("codedesc", beneficiary.getRelationshipcode());
								rel = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									beneficiary.setRelationshipdesc(rel.getDesc1());
								}
								beneficiary.setIsautogenerated(true);
								dbService.save(beneficiary);
								flag = "Success";
								System.out.println("BENEFICIARY RELATIONSHIP CREATED");
							}
						}
					}	
				}
			
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String deleteParSps(String cifno, String relCode, String relcifno) {
		// TODO Auto-generated method stub
		DBService dbService = new DBServiceImplCIF();
		String flag = "Failed";
		Map<String,Object> params = HQLUtil.getMap();
		try {
			params.put("cifno", cifno);
			params.put("relcode", relCode);
			params.put("relcifno", relcifno);
			
			if((Integer)dbService.execStoredProc("DELETE FROM TBCUSTOMERRELATIONSHIP WHERE "
					+ "maincifno=:cifno AND relationshipcode=:relcode AND relatedcifno=:relcifno "
					+ "AND mngempid=:cifno", params, null, 2, null) > 0){
				dbService.execStoredProc("DELETE FROM TBCUSTOMERRELATIONSHIP WHERE maincifno=:relcifno AND "
						+ "relationshipcode=:relcode AND mngempid=:cifno", params, null, 2, null);
				flag = "Success";
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}
	
	//MAR 10-23-2020
	@Override
	public String saveCustRelParSpsRB(String cifno) {
		// TODO Auto-generated method stub
		//DBService dbService = new DBServiceImplCIF();
		DBService dbserviceCOOP = new DBServiceImpl();
		Map<String,Object> params = HQLUtil.getMap();
		String flag = "Failed";
		try {
			params.put("cifno", cifno);
			System.out.println("----- INDIV CIFNO ----- " +cifno);
			Tblosmain main = (Tblosmain)dbserviceCOOP.executeUniqueHQLQuery("FROM Tblosmain WHERE cifno=:cifno", params);
			
			if(main != null){
				System.out.println("----- PASS 1 ------");
				Tblosindividual indiv = (Tblosindividual)dbserviceCOOP.executeUniqueHQLQuery("FROM Tblosindividual WHERE cifno=:cifno", params);
				String spsFname = indiv.getSpousefirstname() == null ? "":indiv.getSpousefirstname();
				String spsLname = indiv.getSpouselastname() == null ? "":indiv.getSpouselastname();
				String spsMname = indiv.getSpousemiddlename() == null ? "":indiv.getSpousemiddlename();
				String spsSuf = indiv.getSpousesuffix() == null ? "":indiv.getSpousesuffix();
				String spsFullname = spsLname+", "+spsFname+" "+spsSuf+" "+spsMname;
				String fatFname = indiv.getFatherfirstname() == null ? "":indiv.getFatherfirstname();
				String fatLname = indiv.getFatherlastname() == null ? "":indiv.getFatherlastname();
				String fatMname = indiv.getFathermiddlename() == null ? "":indiv.getFathermiddlename();
				String fatSuf = indiv.getFathersuffix() == null ? "":indiv.getFathersuffix();
				String fatFullname = fatLname+", "+fatFname+" "+fatSuf+" "+fatMname;
				String motFname = indiv.getMotherfirstname() == null ? "":indiv.getMotherfirstname();
				String motLname = indiv.getMotherlastname() == null ? "":indiv.getMotherlastname();
				String motMname = indiv.getMothermiddlename() == null ? "":indiv.getMothermiddlename();
				String motSuf = indiv.getMothersuffix() == null ? "":indiv.getMothersuffix();
				String motFullname = motLname+", "+motFname+" "+motSuf+" "+motMname;
				String beneFname = indiv.getBeneficiaryfirstname() == null ? "":indiv.getBeneficiaryfirstname();
				String beneLname = indiv.getBeneficiarylastname() == null ? "":indiv.getBeneficiarylastname();
				String beneMname = indiv.getBeneficiarymiddlename() == null ? "":indiv.getBeneficiarymiddlename();
				String beneSuf = indiv.getBeneficiarysuffix() == null ? "":indiv.getBeneficiarysuffix();
				String beneFullname = beneLname+", "+beneFname+" "+beneSuf+" "+beneMname;
				if(indiv != null){
					System.out.println("----- PASS 2 -----");
//					if(indiv.getCivilstatus() != null && (indiv.getCivilstatus().equals("2") || indiv.getCivilstatus().equals("4"))){
					/** Create Relationship Spouse **/
					if(indiv.getSpousecifno() != null){
						params.put("spscifno", indiv.getSpousecifno());
						if((Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationshiplos "
								+ "WHERE maincifno=:cifno and relationshipcode='SPS' and "
								+ "relatedcifno=:spscifno", params, null, 0, null) > 0 && (Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationshiplos WHERE maincifno=:spscifno "
										+ "AND relationshipcode='SPS' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="sps exist";
						}
						if(flag == "sps exist"){
							System.out.println("Existing Spouse Relationship");
								//do nothing
						}else{
							System.out.println("----- SPOUSE PASS 1 ------");
							Tbcustomerrelationshiplos sps = new Tbcustomerrelationshiplos();
							sps.setMaincifno(main.getCifno());
							sps.setMaincifname(main.getFullname());
							sps.setRelatedcifno(indiv.getSpousecifno());
							sps.setRelatedcifname(spsFullname);
							sps.setRelationshipcode("SPS");
							sps.setAddedby(UserUtil.securityService.getUserName());
							sps.setDateadded(new Date());
							sps.setMngempid(main.getCifno());
							params.put("codedesc", sps.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								sps.setRelationshipdesc(rel.getDesc1());
							}
							sps.setIsautogenerated(true);
							if(dbserviceCOOP.save(sps)){
								System.out.println("----- SPOUSE PASS 2 ------");
								sps.setMaincifno(indiv.getSpousecifno());
								sps.setMaincifname(spsFullname);
								sps.setRelatedcifno(main.getCifno());
								sps.setRelatedcifname(main.getFullname());
								sps.setRelationshipcode("SPS");
								sps.setAddedby(UserUtil.securityService.getUserName());
								sps.setDateadded(new Date());
								sps.setMngempid(main.getCifno());
								params.put("codedesc", sps.getRelationshipcode());
								rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									sps.setRelationshipdesc(rel.getDesc1());
								}
								sps.setIsautogenerated(true);
								dbserviceCOOP.save(sps);
								flag = "Success";
								System.out.println("SPOUSE RELATIONSHIP CREATED");
							}
						}
					}
					/** Create Relationship Father **/
					if(indiv.getFathercifno() != null){
						params.put("fatcifno", indiv.getFathercifno());
						if((Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationshiplos "
								+ "WHERE maincifno=:cifno and relationshipcode='PAR' and "
								+ "relatedcifno=:fatcifno", params, null, 0, null) > 0 && (Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationshiplos WHERE maincifno=:fatcifno "
										+ "AND relationshipcode='CHI' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="father exist";
						}
						if(flag == "father exist"){
							System.out.println("Existing Father Relationship");
								//do nothing
						}else{
							System.out.println("----- FATHER PASS 1 ------");
							Tbcustomerrelationshiplos father = new Tbcustomerrelationshiplos();
							father.setMaincifno(main.getCifno());
							father.setMaincifname(main.getFullname());
							father.setRelatedcifno(indiv.getFathercifno());
							father.setRelatedcifname(fatFullname);
							father.setRelationshipcode("PAR");
							father.setAddedby(UserUtil.securityService.getUserName());
							father.setDateadded(new Date());
							father.setMngempid(main.getCifno());
							params.put("codedesc", father.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								father.setRelationshipdesc(rel.getDesc1());
							}
							father.setIsautogenerated(true);
							if(dbserviceCOOP.save(father)){
								System.out.println("----- FATHER PASS 2 ------");
								father.setMaincifno(indiv.getFathercifno());
								father.setMaincifname(fatFullname);
								father.setRelatedcifno(main.getCifno());
								father.setRelatedcifname(main.getFullname());
								father.setRelationshipcode("CHI");
								father.setAddedby(UserUtil.securityService.getUserName());
								father.setDateadded(new Date());
								father.setMngempid(main.getCifno());
								params.put("codedesc", father.getRelationshipcode());
								rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									father.setRelationshipdesc(rel.getDesc1());
								}
								father.setIsautogenerated(true);
								dbserviceCOOP.save(father);
								flag = "Success";
								System.out.println("FATHER RELATIONSHIP CREATED");
							}
						}
					}	
					/** Create Relationship Mother **/
					if(indiv.getMothercifno() != null){
						params.put("motcifno", indiv.getMothercifno());
						if((Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationshiplos "
								+ "WHERE maincifno=:cifno and relationshipcode='PAR' and "
								+ "relatedcifno=:motcifno", params, null, 0, null) > 0 && (Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationshiplos WHERE maincifno=:motcifno "
										+ "AND relationshipcode='CHI' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="mother exist";
						}
						if(flag == "mother exist"){
							System.out.println("Existing Mother Relationship");
								//do nothing
						}else{
							System.out.println("----- MOTHER PASS 1 ------");
							Tbcustomerrelationshiplos mother = new Tbcustomerrelationshiplos();
							mother.setMaincifno(main.getCifno());
							mother.setMaincifname(main.getFullname());
							mother.setRelatedcifno(indiv.getMothercifno());
							mother.setRelatedcifname(motFullname);
							mother.setRelationshipcode("PAR");
							mother.setAddedby(UserUtil.securityService.getUserName());
							mother.setDateadded(new Date());
							mother.setMngempid(main.getCifno());
							params.put("codedesc", mother.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								mother.setRelationshipdesc(rel.getDesc1());
							}
							mother.setIsautogenerated(true);
							if(dbserviceCOOP.save(mother)){
								System.out.println("----- MOTHER PASS 2 ------");
								mother.setMaincifno(indiv.getMothercifno());
								mother.setMaincifname(motFullname);
								mother.setRelatedcifno(main.getCifno());
								mother.setRelatedcifname(main.getFullname());
								mother.setRelationshipcode("CHI");
								mother.setAddedby(UserUtil.securityService.getUserName());
								mother.setDateadded(new Date());
								mother.setMngempid(main.getCifno());
								params.put("codedesc", mother.getRelationshipcode());
								rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									mother.setRelationshipdesc(rel.getDesc1());
								}
								mother.setIsautogenerated(true);
								dbserviceCOOP.save(mother);
								flag = "Success";
								System.out.println("MOTHER RELATIONSHIP CREATED");
							}
						}
					}		
//					}
					/** Create Relationship Beneficiary **/
					if(indiv.getBeneficiarycifno() != null){
//						System.out.println(">>>BENEFICIARY<<<<<"+indiv.getBeneficiarycifno());
						params.put("benecifno", indiv.getBeneficiarycifno());
						if((Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM Tbcustomerrelationshiplos "
								+ "WHERE maincifno=:cifno and relationshipcode='BEN' and "
								+ "relatedcifno=:benecifno", params, null, 0, null) > 0 && (Integer)dbserviceCOOP.execStoredProc("SELECT COUNT(*) FROM "
										+ "Tbcustomerrelationshiplos WHERE maincifno=:benecifno "
										+ "AND relationshipcode='BENY' and relatedcifno=:cifno", params, null, 0, null) > 0 ){
							flag ="beneficiary exist";
						}
						if(flag == "beneficiary exist"){
							System.out.println("Existing Beneficiary Relationship");
								//do nothing
						}else{
							System.out.println("----- BENEFICIARY PASS 1 ------");
							Tbcustomerrelationshiplos beneficiary = new Tbcustomerrelationshiplos();
							beneficiary.setMaincifno(main.getCifno());
							beneficiary.setMaincifname(main.getFullname());
							beneficiary.setRelatedcifno(indiv.getBeneficiarycifno());
//							System.out.println(beneFullname);
							beneficiary.setRelatedcifname(beneFullname);
							beneficiary.setRelationshipcode("BENY");
							beneficiary.setAddedby(UserUtil.securityService.getUserName());
							beneficiary.setDateadded(new Date());
							beneficiary.setMngempid(main.getCifno());
							params.put("codedesc", beneficiary.getRelationshipcode());
							Tbcodetable rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
									+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
							if(rel != null){
								beneficiary.setRelationshipdesc(rel.getDesc1());
							}
							beneficiary.setIsautogenerated(true);
							if(dbserviceCOOP.save(beneficiary)){
								System.out.println("----- BENEFICIARY PASS 2 ------");
								beneficiary.setMaincifno(indiv.getBeneficiarycifno());
								beneficiary.setMaincifname(beneFullname);
								beneficiary.setRelatedcifno(main.getCifno());
								beneficiary.setRelatedcifname(main.getFullname());
								beneficiary.setRelationshipcode("BEN");
								beneficiary.setAddedby(UserUtil.securityService.getUserName());
								beneficiary.setDateadded(new Date());
								beneficiary.setMngempid(main.getCifno());
								params.put("codedesc", beneficiary.getRelationshipcode());
								rel = (Tbcodetable)dbserviceCOOP.executeUniqueHQLQuery("FROM Tbcodetable WHERE "
										+ "id.codename='RELATIONSHIPCODE' AND id.codevalue=:codedesc", params);
								if(rel != null){
									beneficiary.setRelationshipdesc(rel.getDesc1());
								}
								beneficiary.setIsautogenerated(true);
								dbserviceCOOP.save(beneficiary);
								flag = "Success";
								System.out.println("BENEFICIARY RELATIONSHIP CREATED");
							}
						}
					}	
				}
			
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}
	
	@Override
	public String deleteRelCorpRB(String cifno, String relCode, String relCifno,String mngempid) {
		// TODO Auto-generated method stub
		DBService dbserviceCOOP = new DBServiceImpl();
		String flag = "Failed";
		Map<String,Object> params = HQLUtil.getMap();
		try {
			params.put("cifno", cifno);
			params.put("relcode", relCode);
			params.put("relcifno", relCifno);
			params.put("mngempid", mngempid);
			System.out.println(">>>>>>>>>>>>>DELETE CUSTOMER RELATIONSHIP<<<<<<<<<<<<<<");
			System.out.println("delete cust cifno: "+cifno+" relcode: "+relCode+" relcifno: "+relCifno+" mngempid :"+mngempid);
			
			if( (Integer) dbserviceCOOP.execStoredProc(
					"DELETE FROM TBCUSTOMERRELATIONSHIPLOS WHERE "
							+ "maincifno=:cifno AND mngempid=:mngempid AND relatedcifno=:relcifno",
					params, null, 2, null) > 0) {
				
				dbserviceCOOP.execStoredProc("DELETE FROM TBCUSTOMERRELATIONSHIPLOS WHERE "
								+ "maincifno=:relcifno AND mngempid=:mngempid AND relatedcifno=:cifno",
						params, null, 2, null);
						flag = "Success";
						System.out.println(">>>>>>>>>END<<<<<<<<<<< CUSTOMER RELATIONSHIP DELETED >>>>>>>>>>");
			}

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return flag;
	}



}
