package com.etel.management;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;


import com.cifsdb.data.Tbcifbusiness;
import com.cifsdb.data.Tbcifcorporate;
import com.cifsdb.data.Tbcifemployment;
import com.cifsdb.data.Tbcodetable;
import com.cifsdb.data.Tbmanagement;
import com.coopdb.data.Tbmanagementlos;
import com.etel.CustomerRelationship.CustomerRelationshipService;
import com.etel.CustomerRelationship.CustomerRelationshipServiceImpl;
import com.etel.common.service.DBService;
import com.etel.common.service.DBServiceImpl;
import com.etel.common.service.DBServiceImplCIF;
import com.etel.generator.NoGenerator;
import com.etel.history.HistoryService;
import com.etel.history.HistoryServiceImpl;
import com.etel.managementforms.ManagementForm;
import com.etel.otherinfo.pep.PepService;
import com.etel.otherinfo.pep.PepServiceImpl;
import com.etel.utils.HQLUtil;

public class ManagementServiceImpl implements ManagementService {

	/**
	 * BUSINESS TYPE - SINGLE PROP  > Reg Owner 
	 * 				 - PARTNERSHIP  > Partners, Signatories 							
	 * 				 - CORPORATION  > Directors, Officers, Signatories, Shareholders
	 **/
	
	/**
	 * Code - OWN -	Participation - Registered Owner - OWN
	 * 		- PRT				  - Partner 		 - P
	 * 		- SIG				  - Signatory		 - SIG
	 * 		- DIR                 - Director		 - DR
	 * 		- OFF                 - Officer   		 - OFF
	 * 		- SHR                 - Shareholder      - SHA > new relationcode
	 **/	
	
	/** SAVE NEW MANAGEMENT **/
	@Override
	public String setupManagement(ManagementForm form) {
		// TODO Auto-generated method stub
		
		String flag = "";
		DBService dbService = new DBServiceImplCIF();		
		Tbmanagement mn = new Tbmanagement();
		Map<String, Object> param = HQLUtil.getMap();
		try {
			if(form.getRelationcifno()!=null){
				
				if(form.getCustomertype().equals("1")){
					mn.setLastname(form.getLname());
					mn.setFirstname(form.getFname());
					mn.setMiddlename(form.getMname()==null? "": form.getMname());
					mn.setSuffix(form.getSuffix()==null? "": form.getSuffix());
					mn.setDateofbirth(form.getDate());
				}else if(form.getCustomertype().equals("2")){
					//11-09-17
					mn.setCorporatename(form.getCorporatename());
					mn.setDateofincorporation(form.getDateofincorporation());
				}
				mn.setCustomertype(form.getCustomertype());
				mn.setCifno(form.getCifno());
				mn.setRelationshipcode(form.getPcode());
				mn.setRelatedcifno(form.getRelationcifno());
				mn.setNationality(form.getNationality());
				mn.setBusinesstype(form.getBusinesstype());
				mn.setIsautogenerated(false);
				mn.setDatecreated(new Date());
				
				if(dbService.save(mn)){
					//System.out.println(">>>>>>> SUCCESS SAVING NEW MANAGEMENT");					
					//flag = "success";	
					
					//08-08-17 PONGYU
					param.put("rcode", form.getPcode());
					System.out.println("MNG PCode ----------------------- " +form.getPcode());
					Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
					HistoryService h = new HistoryServiceImpl();
					if(form.getCustomertype().equals("1")){
						h.addHistory(mn.getCifno(), "Added management details: "+form.getLname()+", "+form.getFname() +" as <b> "+c.getDesc1(), null);
					}else{
						h.addHistory(mn.getCifno(), "Added management details: "+form.getCorporatename() +" as <b> "+c.getDesc1(), null);
					}
					
					/***********************************************************************************************
					 *********************************** 2 WAY SAVING AT EMP OR BUS ********************************
					 ***********************************************************************************************/
					System.out.println(">>> 2 WAY SAVING AT EMP OR BUS <<<");
					System.out.println(">>> RELATIONSHIPCODE - " + mn.getRelationshipcode());
					System.out.println(">>> RELATEDCIFNO - " + mn.getRelatedcifno());
					
					param.put("cif", mn.getCifno());
					Tbcifcorporate corp = (Tbcifcorporate) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifcorporate WHERE cifno=:cif", param);
					
					if(mn.getRelationshipcode().equalsIgnoreCase("OWN") || mn.getRelationshipcode().equalsIgnoreCase("P")
							//|| mn.getRelationshipcode().equalsIgnoreCase("GM")
							){
						// business
						Tbcifbusiness b = new Tbcifbusiness();
						b.setBuscifno(mn.getCifno()); // Corp - connected
						b.setCifno(mn.getRelatedcifno()); // Indiv - own
						b.setBusinessname(corp.getCorporatename());
						b.setBusinesstype(corp.getBusinesstype());
						b.setBusinesstin(corp.getTin());
						b.setBusinessclass(corp.getBusinesstype());
						b.setBusinessphoneno(corp.getHomephoneno());
						b.setPsic(corp.getPsic());
						b.setIncoporationdate(corp.getDateofincorporation());
						b.setFulladdress1(corp.getFulladdress1());
						b.setStreetno1(corp.getStreetno1());
						b.setSubdivision1(corp.getSubdivision1());
						b.setCountry1(corp.getCountry1());
						b.setProvince1(corp.getProvince1());
						b.setCity1(corp.getCity1());
						b.setBarangay1(corp.getBarangay1());
						b.setPostalcode1(corp.getPostalcode1());
						b.setPostalcodename(corp.getPostalcodename1());
						b.setCountrycodephone(corp.getCountrycodephone());
						b.setAreacodephone(corp.getAreacodephone());
						b.setCountrycodefax(corp.getCountrycodefax());
						b.setAreacodefax(corp.getAreacodefax());
						b.setPsiccode(corp.getPsiccode());
						b.setPsiclevel1(corp.getPsiclevel1());
						b.setPsiclevel2(corp.getPsiclevel2());
						b.setPsiclevel3(corp.getPsiclevel3());
						b.setPsiclevel4(corp.getPsiccode());
						b.setIsautogenerated(true);
						
						NoGenerator no = new NoGenerator();
						String id = no.generateMngID();
						b.setMngbusid(id);
						
						if(dbService.save(b)){
							//flag = "success";
							System.out.println(">>> SUCCESS SAVING AT BUSINESS.");
							if(mn.getRelationshipcode().equalsIgnoreCase("P")) {
								mn.setMngempid("2");
							}else {
								mn.setMngempid(b.getMngbusid());
							}
							if(dbService.saveOrUpdate(mn)){
								flag = "success";
							}
							CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
							saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(),mn.getRelatedcifno());
							
//							if(mn.getRelationshipcode().equalsIgnoreCase("GM")){
//								Tbcifemployment e = new Tbcifemployment();
//								e.setCifno(mn.getRelatedcifno());
//								e.setEmployername(corp.getCorporatename());
//								e.setEmpcifno(mn.getCifno());
//								e.setIsautogenerated(true);
//								e.setMngempid(id);
//								if(dbService.save(e)){
//									
//								}
//							}
						}

						else{
							System.out.println(">>> ERROR!!!!! SAVING AT BUSINESS.");
						}

					}else if(mn.getRelationshipcode().equalsIgnoreCase("DR") || mn.getRelationshipcode().equalsIgnoreCase("OFF") 
							|| mn.getRelationshipcode().equalsIgnoreCase("SHA") 
							|| mn.getRelationshipcode().equalsIgnoreCase("GM")){
						// employment 
						Tbcifemployment e = new Tbcifemployment();
						if(mn.getRelationshipcode().equalsIgnoreCase("DR")){ 
							e.setPositioncategory("Director"); // director add dropdown
						}else if(mn.getRelationshipcode().equalsIgnoreCase("OFF")){ 
							e.setPositioncategory("Junior Officer");
						}
						else if(mn.getRelationshipcode().equalsIgnoreCase("SIG")){
							e.setPositioncategory("Signatories"); 
						}
						else if(mn.getRelationshipcode().equalsIgnoreCase("SHA")){
							e.setPositioncategory("Stockholder/Shareholder");
						}
						e.setEmpcifno(mn.getCifno()); // Corp - connected
						e.setCifno(mn.getRelatedcifno()); // Indiv - own
						e.setEmployername(corp.getCorporatename());
						e.setEmployertin(corp.getTin());
						e.setEmployerphoneno(corp.getHomephoneno());
						e.setPsic(corp.getPsic());
						// grossincome
						e.setFulladdress1(corp.getFulladdress1());
						e.setStreetno1(corp.getStreetno1());
						e.setCountry(corp.getCountry1());
						e.setProvince1(corp.getProvince1());
						e.setCity1(corp.getCity1());
						e.setBarangay1(corp.getBarangay1());
						e.setPostalcode1(corp.getPostalcode1());
						e.setPostalcodename1(corp.getPostalcodename1());
						e.setCountrycodephone(corp.getCountrycodephone());
						e.setAreacodephone(corp.getAreacodephone());
						e.setPsiccode(corp.getPsiccode());
						e.setPsiclevel1(corp.getPsiclevel1());
						e.setPsiclevel2(corp.getPsiclevel2());
						e.setPsiclevel3(corp.getPsiclevel3());
						e.setPsiclevel4(corp.getPsiccode());
						e.setIsautogenerated(true);
						e.setEmprecordtype("0"); //present
						
						NoGenerator no = new NoGenerator();
						String id = no.generateMngID();
						e.setMngempid(id);
						
						if(dbService.save(e)){
							//flag = "success";
							System.out.println("------ MNG SAVED ------");
							System.out.println(">>> SUCCESS SAVING AT EMPLOYMENT.");
							
							mn.setMngempid(e.getMngempid());
							if(dbService.saveOrUpdate(mn)){
								flag = "success";
								PepService p = new PepServiceImpl();
								p.getPepInfo(e.getCifno()); /**Pong02.06.18**/
							}
							CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
							saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno());
						}else{
							System.out.println(">>> ERROR!!!!! SAVING AT EMPLOYMENT.");
						}
						
					}else{
						System.out.println(">>> NO EMPLOYMENT, RELATIONSHIPCODE NOT INCLUDED.");
						return flag = "success";
					}
					
				}else{
					//System.out.println(">>>>>>> FAILED SAVING NEW MANAGEMENT");					
					flag = "failed";							
				}
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	/** LIST MANAGEMENT **/	
	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> mngmtList(String cifno, String pcode, String shaCustType, Integer id) {
		// TODO Auto-generated method stub
		
		System.out.println(">>>>>>>>>>>>>>>>>>> mngmtList ID - " + id);
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		try {
			
			if (id != null && id == 0) { /** 11-17-17 **/
				//param.put("id", id);
				Integer maxid = (Integer) dbService.executeUniqueSQLQuery("SELECT MAX(id) FROM Tbmanagement", null);
				param.put("id", maxid);
				list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE id=:id", param);
			} else if (id == null) {
				param.put("cifno", cifno);
				param.put("pcode", pcode);
				if(shaCustType==null){
					list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND relationshipcode=:pcode", param);
					
				}else{
					param.put("custType", shaCustType);
					list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND relationshipcode=:pcode AND customertype=:custType", param);

				}				
			}

			// Formatter - Officer's Position 
			if (list != null && (pcode.equalsIgnoreCase("OFF") || pcode.equalsIgnoreCase("DR"))) {
				for (Tbmanagement mg : list) {
					if (mg.getPosition() != null) {
						param.put("position", mg.getPosition());
						Tbcodetable codePosition = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable a WHERE a.id.codename ='POSITION' AND a.id.codevalue =:position", param);
						if (codePosition != null) {
							mg.setPosition(codePosition.getDesc1());
						}
					}
					if (mg.getBoarddesignation()!=null){
						param.put("board", mg.getBoarddesignation());
						Tbcodetable codeBoard = (Tbcodetable) dbService.executeUniqueHQLQuery("FROM Tbcodetable a WHERE a.id.codename ='BOARDDESIGNATION' AND a.id.codevalue =:board", param);
						if (codeBoard != null) {
							mg.setBoarddesignation(codeBoard.getDesc1());
						}	
					}
				}
			}else{
				// do nothing
			}
			
//			// 11-24-17
//			List<Tbmanagement> list2 = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE mngempid IS NOT NULL",
//					param);
//			if(list2!=null){
//				for(Tbmanagement list3 :list2){
//					param.put("genid", list3.getMngempid());
//					List<Tbcifemployment> list4 = (List<Tbcifemployment>) dbService.executeListHQLQuery("FROM Tbcifemployment WHERE mngempid=:genid",
//							param);
//					if(list4!=null){
//						if(dbService.delete(list4)){
//							list3.setMngempid(null);
//							dbService.saveOrUpdate(list3);
//							System.out.println("EMPLOYMENT");
//						}
//					}
//					List<Tbcifbusiness> list5 = (List<Tbcifbusiness>) dbService.executeListHQLQuery("FROM Tbcifbusiness WHERE mngbusid=:genid",
//							param);
//					if(list5!=null){
//						if(dbService.delete(list5)){
//							list3.setMngempid(null);
//							dbService.saveOrUpdate(list3);
//							System.out.println("BUSINESS");
//						}
//					}
//				}
//			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;		
	}
	
	/** UPDATE MANAGEMENT **/	
	@Override
	public String updateManagement(Tbmanagement mg) {
		// TODO Auto-generated method stub
		
		System.out.println(">>>>>>>>>>>>>> POSITION CATEGORY - " +mg.getPositioncategory());
		
		String flag = "";
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		
		try {
			
			param.put("id", mg.getId());
			System.out.println(">>>>>>>>>>>>>> ID - " +mg.getId());
			Tbmanagement mn = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", param);
			
			if (mn != null) {
				
				if(mn.getMngempid()!=null){
					System.out.println(">>>>> WITH MngID " +mn.getMngempid());

					param.put("generatedid", mn.getMngempid());
					Tbmanagement row = (Tbmanagement) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbmanagement WHERE mngempid=:generatedid", param);

					Tbmanagement m = new Tbmanagement();

					m.setCifno(mg.getCifno());
					m.setFirstname(mg.getFirstname());
					m.setMiddlename(mg.getMiddlename());
					m.setLastname(mg.getLastname());
					m.setSuffix(mg.getSuffix());
					m.setDateofbirth(mg.getDateofbirth());
					m.setPosition(mg.getPosition());
					m.setNationality(mg.getNationality());
					m.setNoofshares(mg.getNoofshares());
					m.setAmtsubscribed(mg.getAmtsubscribed());
					m.setOwnershippercentage(mg.getOwnershippercentage());
					m.setRelationshipcode(mg.getRelationshipcode());
					m.setRelatedcifno(mg.getRelatedcifno());
					m.setBusinesstype(mg.getBusinesstype());
					m.setBoarddesignation(mg.getBoarddesignation());
					m.setSignatorylevel(mg.getSignatorylevel());
					m.setCorporatename(mg.getCorporatename());
					m.setDateofincorporation(mg.getDateofincorporation());
					m.setCustomertype(mg.getCustomertype());
					m.setIsautogenerated(mg.getIsautogenerated());
					m.setPositioncategory(mg.getPositioncategory());
					m.setDatecreated(new Date());
					
					String needID = "no";

					Tbcifbusiness rowb = (Tbcifbusiness) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifbusiness WHERE mngbusid=:generatedid", param);
					Tbcifemployment rowe = (Tbcifemployment) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifemployment WHERE mngempid=:generatedid", param);

					System.out.println(">>>>>>>>> RELATIONSHIPCODE - " + mn.getRelationshipcode());
					if(mn.getRelationshipcode().equalsIgnoreCase("OWN") || mn.getRelationshipcode().equalsIgnoreCase("P") || 
							mn.getRelationshipcode().equalsIgnoreCase("DR") || mn.getRelationshipcode().equalsIgnoreCase("OFF")
							|| mn.getRelationshipcode().equalsIgnoreCase("SIG") || mn.getRelationshipcode().equalsIgnoreCase("SHA")
							|| mn.getRelationshipcode().equalsIgnoreCase("GM")){
						needID = "yes";
					}

					if(needID.equalsIgnoreCase("yes")){
						NoGenerator no = new NoGenerator();
						String id = no.generateMngID();
						m.setMngempid(id);

					}
					if(dbService.save(m)){
						System.out.println(">>>>> SUCCESS SAVING / UPDATING MANAGEMENT");
//						if(mn.getRelationshipcode().equalsIgnoreCase("OFF") || mn.getRelationshipcode().equalsIgnoreCase("SHA") || mn.getRelationshipcode().equalsIgnoreCase("DR")){
							if (row != null) {
								Tbcifemployment e = new Tbcifemployment();
								e.setIsautogenerated(row.getIsautogenerated());
								if (dbService.delete(row)) {
									System.out.println(">>>>> DELETED OLD MANAGEMENT 1");
									param.put("cifcorp", m.getCifno());
									Tbcifcorporate corp = (Tbcifcorporate) dbService.executeUniqueHQLQueryMaxResultOne(
											"FROM Tbcifcorporate WHERE cifno=:cifcorp", param);
								if(corp!=null){
									System.out.println("p1");
									flag = "success";
									if(rowe!=null){
											System.out.println("p2");
											if (dbService.delete(rowe)) {
												System.out.println(">>>>> DELETED OLD EMPLOYMENT");
											CustomerRelationshipService delRel = new CustomerRelationshipServiceImpl();
											delRel.deleteRelCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno(), mn.getMngempid());

//											//01-12-18
//											if (mn.getRelationshipcode().equalsIgnoreCase("DR")) {
//												// e.setPositioncategory("Director");
//												if (mn.getBoarddesignation().equals("4")) {
//													e.setPositioncategory("Trustee");
//												} else if (mn.getBoarddesignation().equals("1")
//														|| mn.getBoarddesignation().equals("2")
//														|| mn.getBoarddesignation().equals("3")) {
//													e.setPositioncategory("Director");
//												}
//											} else if (mn.getRelationshipcode().equalsIgnoreCase("OFF")) {
//												e.setPositioncategory("Junior Officer");
//											} else if (mn.getRelationshipcode().equalsIgnoreCase("SHA")) {
//												e.setPositioncategory("Stockholder/Shareholder");
//											} else if (mn.getRelationshipcode().equalsIgnoreCase("SIG")) {
//												e.setPositioncategory("Signatories");
//											}
											/**JAY.05-23-18**/
											System.out.println("RELCODE>>>>>>>>> " +mn.getRelationshipcode()+ " Board Desig: " +m.getBoarddesignation());
											e.setPositioncategory(mn.getRelationshipcode().equalsIgnoreCase("DR") ? m.getBoarddesignation().equals("4") ? "Trustee" : "Director"
													: mn.getRelationshipcode().equalsIgnoreCase("OFF") ? m.getPositioncategory()
													: mn.getRelationshipcode().equalsIgnoreCase("SHA") ? "Stockholder/Shareholder"
													: mn.getRelationshipcode().equalsIgnoreCase("SIG") ? m.getPositioncategory() : null);
											
											
//											Tbcifemployment e = new Tbcifemployment();
											e.setEmpcifno(mn.getCifno()); // Corp - connected
											e.setCifno(mn.getRelatedcifno()); // Indiv - own
											e.setEmployername(corp.getCorporatename());
											e.setEmployertin(corp.getTin());
											e.setEmployerphoneno(corp.getHomephoneno());
											e.setPsic(corp.getPsic());
											// grossincome
											e.setFulladdress1(corp.getFulladdress1());
											e.setStreetno1(corp.getStreetno1());
											e.setCountry(corp.getCountry1());
											e.setProvince1(corp.getProvince1());
											e.setCity1(corp.getCity1());
											e.setBarangay1(corp.getBarangay1());
											e.setPostalcode1(corp.getPostalcode1());
											e.setPostalcodename1(corp.getPostalcodename1());
											e.setCountrycodephone(corp.getCountrycodephone());
											e.setAreacodephone(corp.getAreacodephone());
											e.setPsiccode(corp.getPsiccode());
											e.setPsiclevel1(corp.getPsiclevel1());
											e.setPsiclevel2(corp.getPsiclevel2());
											e.setPsiclevel3(corp.getPsiclevel3());
											e.setPsiclevel4(corp.getPsiccode());
											//e.setPositioncategory(mg.getPosition());
											if(m.getIsautogenerated()==false){
												e.setIsautogenerated(true);
											}else{
												e.setIsautogenerated(false);
											}
											e.setEmprecordtype("0");//Present	
											
											e.setMngempid(m.getMngempid());

											if(dbService.save(e)){
												System.out.println(">>>>> SUCESS SAVING / UPDATING EMPLOYMENT");
												//													//08-08-17 PONGYU
												param.put("rcode", mg.getRelationshipcode());
												Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
												HistoryService h = new HistoryServiceImpl();
												h.addHistory(mn.getCifno(), "Updated management details: "+mg.getLastname()+", "+mg.getFirstname() +" as <b> "+c.getDesc1(), null);
												flag = "success";
											}
											CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
											saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno());
										}
									}
									
									if(rowb!=null){
										System.out.println("p3");
										if(dbService.delete(rowb)){
											System.out.println(">>>>> DELETED OLD BUSINESS");

											Tbcifbusiness b = new Tbcifbusiness();

											b.setBuscifno(m.getCifno()); // Corp - connected
											b.setCifno(mn.getRelatedcifno()); // Indiv - own
											b.setBusinessname(corp.getCorporatename());
											b.setBusinesstype(corp.getBusinesstype());
											b.setBusinesstin(corp.getTin());
											b.setBusinessclass(corp.getBusinesstype());
											b.setBusinessphoneno(corp.getHomephoneno());
											b.setPsic(corp.getPsic());
											b.setIncoporationdate(corp.getDateofincorporation());
											b.setFulladdress1(corp.getFulladdress1());
											b.setStreetno1(corp.getStreetno1());
											b.setSubdivision1(corp.getSubdivision1());
											b.setCountry1(corp.getCountry1());
											b.setProvince1(corp.getProvince1());
											b.setCity1(corp.getCity1());
											b.setBarangay1(corp.getBarangay1());
											b.setPostalcode1(corp.getPostalcode1());
											b.setPostalcodename(corp.getPostalcodename1());
											b.setCountrycodephone(corp.getCountrycodephone());
											b.setAreacodephone(corp.getAreacodephone());
											b.setCountrycodefax(corp.getCountrycodefax());
											b.setAreacodefax(corp.getAreacodefax());
											b.setPsiccode(corp.getPsiccode());
											b.setPsiclevel1(corp.getPsiclevel1());
											b.setPsiclevel2(corp.getPsiclevel2());
											b.setPsiclevel3(corp.getPsiclevel3());
											b.setPsiclevel4(corp.getPsiccode());
											if(m.getIsautogenerated()==false){
												b.setIsautogenerated(true);
											}else{
												b.setIsautogenerated(false);
											}
											
											b.setMngbusid(m.getMngempid());

											if(dbService.save(b)){
												System.out.println(">>>>> SUCESS SAVING / UPDATING BUSINESS");
												//													//08-08-17 PONGYU
												param.put("rcode", mg.getRelationshipcode());
												Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
												HistoryService h = new HistoryServiceImpl();
												h.addHistory(mn.getCifno(), "Updated management details: "+mg.getLastname()+", "+mg.getFirstname() +" as <b> "+c.getDesc1(), null);
												flag = "success";
											}
//											CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
//											saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno());
										}
									}
								}
							}
//						}
						}
					}

				}else{

					System.out.println(">>>>>>>> NO MngEmpID");

					Tbmanagement m = new Tbmanagement();

					m.setCifno(mg.getCifno());
					m.setFirstname(mg.getFirstname());
					m.setMiddlename(mg.getMiddlename());
					m.setLastname(mg.getLastname());
					m.setSuffix(mg.getSuffix());
					m.setDateofbirth(mg.getDateofbirth());
					m.setPosition(mg.getPosition());
					m.setNationality(mg.getNationality());
					m.setNoofshares(mg.getNoofshares());
					m.setAmtsubscribed(mg.getAmtsubscribed());
					m.setOwnershippercentage(mg.getOwnershippercentage());
					m.setRelationshipcode(mg.getRelationshipcode());
					m.setRelatedcifno(mg.getRelatedcifno());
					m.setBusinesstype(mg.getBusinesstype());
					m.setBoarddesignation(mg.getBoarddesignation());
					m.setSignatorylevel(mg.getSignatorylevel());
					m.setCorporatename(mg.getCorporatename());
					m.setDateofincorporation(mg.getDateofincorporation());
					m.setCustomertype(mg.getCustomertype());
					m.setIsautogenerated(mg.getIsautogenerated()); // is-autogenerated
					m.setPositioncategory(mg.getPositioncategory());
					m.setDatecreated(new Date());
					
					String needID = "no";
					String empOrbus = "";
					
					System.out.println(">>>>>>>>> RELATIONSHIPCODE - " + mn.getRelationshipcode());
					if(mn.getRelationshipcode().equalsIgnoreCase("OWN") || mn.getRelationshipcode().equalsIgnoreCase("P")
							|| mn.getRelationshipcode().equalsIgnoreCase("GM")){
						needID = "yes";
						empOrbus = "bus";
						
					}else if(mn.getRelationshipcode().equalsIgnoreCase("DR") || mn.getRelationshipcode().equalsIgnoreCase("OFF")
							|| mn.getRelationshipcode().equalsIgnoreCase("SHA")){
						needID = "yes";
						empOrbus = "emp";
						
					}
					//05-24-18 JAY
					else if(mn.getRelationshipcode().equalsIgnoreCase("SIG")){
						needID = "yes";
						empOrbus = "";
					}
					if(needID.equalsIgnoreCase("yes")){
						NoGenerator no = new NoGenerator();
						String id = no.generateMngID();
						m.setMngempid(id);

					}
					if(dbService.save(m)){
						System.out.println(">>>>> SUCCESS SAVING / UPDATING MANAGEMENT");
						if(mn!=null){
							if(dbService.delete(mn)){
								System.out.println(">>>>> DELETED OLD MANAGEMENT 2");
								param.put("cifcorp", m.getCifno());
								Tbcifcorporate corp = (Tbcifcorporate) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifcorporate WHERE cifno=:cifcorp", param);
								if(empOrbus.equalsIgnoreCase("emp")){
									
									Tbcifemployment e = new Tbcifemployment();
									e.setEmpcifno(mn.getCifno()); // Corp - connected
									e.setCifno(mn.getRelatedcifno()); // Indiv - own
									e.setEmployername(corp.getCorporatename());
									e.setEmployertin(corp.getTin());
									e.setEmployerphoneno(corp.getHomephoneno());
									e.setPsic(corp.getPsic());
									// grossincome
									e.setFulladdress1(corp.getFulladdress1());
									e.setStreetno1(corp.getStreetno1());
									e.setCountry(corp.getCountry1());
									e.setProvince1(corp.getProvince1());
									e.setCity1(corp.getCity1());
									e.setBarangay1(corp.getBarangay1());
									e.setPostalcode1(corp.getPostalcode1());
									e.setPostalcodename1(corp.getPostalcodename1());
									e.setCountrycodephone(corp.getCountrycodephone());
									e.setAreacodephone(corp.getAreacodephone());
									e.setPsiccode(corp.getPsiccode());
									e.setPsiclevel1(corp.getPsiclevel1());
									e.setPsiclevel2(corp.getPsiclevel2());
									e.setPsiclevel3(corp.getPsiclevel3());
									e.setPsiclevel4(corp.getPsiccode());
									//e.setPositioncategory(mg.getPosition());
									if(m.getIsautogenerated()==false){
										e.setIsautogenerated(true);
									}else{
										e.setIsautogenerated(false);
									}
									e.setEmprecordtype("0");//Present	
									e.setMngempid(m.getMngempid());
									
									if(dbService.save(e)){
										System.out.println(">>>>> SUCESS SAVING / UPDATING BUSINESS");
										//													//08-08-17 PONGYU
										param.put("rcode", mg.getRelationshipcode());
										Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
										HistoryService h = new HistoryServiceImpl();
										h.addHistory(mn.getCifno(), "Updated management details: "+mg.getLastname()+", "+mg.getFirstname() +" as <b> "+c.getDesc1(), null);
										flag = "success";
									}
									CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
									saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno());
								}else if(empOrbus.equalsIgnoreCase("bus")){
									
									Tbcifbusiness b = new Tbcifbusiness();

									b.setBuscifno(m.getCifno()); // Corp - connected
									b.setCifno(mn.getRelatedcifno()); // Indiv - own
									b.setBusinessname(corp.getCorporatename());
									b.setBusinesstype(corp.getBusinesstype());
									b.setBusinesstin(corp.getTin());
									b.setBusinessclass(corp.getBusinesstype());
									b.setBusinessphoneno(corp.getHomephoneno());
									b.setPsic(corp.getPsic());
									b.setIncoporationdate(corp.getDateofincorporation());
									b.setFulladdress1(corp.getFulladdress1());
									b.setStreetno1(corp.getStreetno1());
									b.setSubdivision1(corp.getSubdivision1());
									b.setCountry1(corp.getCountry1());
									b.setProvince1(corp.getProvince1());
									b.setCity1(corp.getCity1());
									b.setBarangay1(corp.getBarangay1());
									b.setPostalcode1(corp.getPostalcode1());
									b.setPostalcodename(corp.getPostalcodename1());
									b.setCountrycodephone(corp.getCountrycodephone());
									b.setAreacodephone(corp.getAreacodephone());
									b.setCountrycodefax(corp.getCountrycodefax());
									b.setAreacodefax(corp.getAreacodefax());
									b.setPsiccode(corp.getPsiccode());
									b.setPsiclevel1(corp.getPsiclevel1());
									b.setPsiclevel2(corp.getPsiclevel2());
									b.setPsiclevel3(corp.getPsiclevel3());
									b.setPsiclevel4(corp.getPsiccode());
									if(m.getIsautogenerated()==false){
										b.setIsautogenerated(true);
									}else{
										b.setIsautogenerated(false);
									}
									b.setMngbusid(m.getMngempid());		
									
									if(dbService.save(b)){
										System.out.println(">>>>> SUCESS SAVING / UPDATING BUSINESS");
										//													//08-08-17 PONGYU
										param.put("rcode", mg.getRelationshipcode());
										Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
										HistoryService h = new HistoryServiceImpl();
										h.addHistory(mn.getCifno(), "Updated management details: "+mg.getLastname()+", "+mg.getFirstname() +" as <b> "+c.getDesc1(), null);
										flag = "success";
									}
									
								}else{
										System.out.println(">>>>>>>>>> NO Emp or Bus");
										//08-08-17 PONGYU
										param.put("rcode", mg.getRelationshipcode());
										Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
										HistoryService h = new HistoryServiceImpl();
										h.addHistory(mn.getCifno(), "Updated management details: "+mg.getLastname()+", "+mg.getFirstname() +" as <b> "+c.getDesc1(), null);
										flag = "success";
										//05-24-18 JAY
										CustomerRelationshipService saveRelation = new CustomerRelationshipServiceImpl();
										saveRelation.saveCustRelationshipCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno());
								}
							}
							
						}
					}
				}
			} 

		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	/** DELETE MANAGEMENT **/
	@Override
	public String deleteManagement(int id) {
		// TODO Auto-generated method stub
		
		String flag = "failed";
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		param.put("id", id);
		System.out.println("eto ang id >>>>" +id);
		
		try {
			Tbmanagement mn = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", param);
			if(mn!=null){
				System.out.println("MN NOT NULL");
				if(mn.getIsautogenerated()==true){
					return flag = "issystemgenerated";
				}else{
					System.out.println("NOT AUTO GEN");
					if(mn.getMngempid()!=null){
						System.out.println("MNG EMPID NOT NULL");
						param.put("generatedid", mn.getMngempid());
						Tbmanagement mn2 = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE mngempid=:generatedid", param);
						if(mn2!=null){
							System.out.println("MNG EMPID NOT NULL 2");
							Tbcifbusiness b = (Tbcifbusiness) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifbusiness WHERE mngbusid=:generatedid", param);
							if(b!=null){
								System.out.println(" B NOT NULL ");
								if(dbService.delete(b)){
									if(mn2.getRelationshipcode().equalsIgnoreCase("GM")){
										Tbcifemployment e = (Tbcifemployment) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifemployment WHERE mngempid=:generatedid", param);
										if(e!=null){
											if (dbService.delete(e)) {
												if(dbService.delete(mn2)){
//													//08-08-17 PONGYU
													flag = "success";
													param.put("rcode", mn.getRelationshipcode());
													Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
													HistoryService h = new HistoryServiceImpl();
													h.addHistory(mn.getCifno(), "Delete management details: "+mn.getLastname()+", "+mn.getFirstname() +" as <b> "+c.getDesc1(), null);
													flag = "success";
												}
											}
										}
									}else{
										if(dbService.delete(mn2)){
//											//08-08-17 PONGYU
											param.put("rcode", mn.getRelationshipcode());
											Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
											HistoryService h = new HistoryServiceImpl();
											h.addHistory(mn.getCifno(), "Delete management details: "+mn.getLastname()+", "+mn.getFirstname() +" as <b> "+c.getDesc1(), null);
											flag = "success";
										}
									}
								}
								CustomerRelationshipService delRel = new CustomerRelationshipServiceImpl();
								delRel.deleteRelCorp(mn2.getCifno(),mn2.getRelationshipcode(),mn2.getRelatedcifno(),mn2.getMngempid());
							}else{
								Tbcifemployment e = (Tbcifemployment) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbcifemployment WHERE mngempid=:generatedid", param);
								if (e != null) {
									System.out.println(" C NOT NULL ");
									if (dbService.delete(e)) {
										if (dbService.delete(mn2)) {
											// //08-08-17 PONGYU
											param.put("rcode", mn.getRelationshipcode());
											Tbcodetable c = (Tbcodetable) dbService.executeUniqueHQLQuery(
													"FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode",
													param);
											HistoryService h = new HistoryServiceImpl();
											h.addHistory(
													mn.getCifno(), "Delete management details: " + mn.getLastname()
															+ ", " + mn.getFirstname() + " as <b> " + c.getDesc1(),
													null);
											flag = "success";
										}
										//05-21-18 JAY
										CustomerRelationshipService delRel = new CustomerRelationshipServiceImpl();
										delRel.deleteRelCorp(mn2.getCifno(),mn2.getRelationshipcode(), mn2.getRelatedcifno(), mn2.getMngempid());
									}
								} else {
									if (dbService.delete(mn2)) {
										// //08-08-17 PONGYU
										param.put("rcode", mn.getRelationshipcode());
										Tbcodetable c = (Tbcodetable) dbService.executeUniqueHQLQuery(
												"FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode",
												param);
										HistoryService h = new HistoryServiceImpl();
										h.addHistory(
												mn.getCifno(), "Delete management details: " + mn.getLastname()
														+ ", " + mn.getFirstname() + " as <b> " + c.getDesc1(),
												null);
										flag = "success";
										//05-24-18 JAY
										CustomerRelationshipService delRel = new CustomerRelationshipServiceImpl();
										delRel.deleteRelCorp(mn.getCifno(), mn.getRelationshipcode(), mn.getRelatedcifno(), mn.getMngempid());
									}
								}
							}
						}
					}else{
//						//08-08-17 PONGYU
						System.out.println("MNG EMPID NULL");
						param.put("rcode", mn.getRelationshipcode());
						Tbcodetable c = (Tbcodetable)dbService.executeUniqueHQLQuery("FROM Tbcodetable WHERE id.codename='RELATIONSHIPCODE' AND id.codevalue=:rcode", param);
						HistoryService h = new HistoryServiceImpl();
						h.addHistory(mn.getCifno(), "Delete management details: "+mn.getLastname()+", "+mn.getFirstname() +" as <b> "+c.getDesc1(), null);
						if (dbService.delete(mn)) {
							flag = "success";
						}
					}					
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;		
	}

	/** GET MANAGEMENT **/	
	@Override
	public Tbmanagement getManagementRecord(String cifno, int id) {
		// TODO Auto-generated method stub
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		Tbmanagement row = new Tbmanagement();
		
		try {
			param.put("cifno", cifno);
			param.put("id", id);
			row = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND id=:id", param);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return row;		
	}

	/** DELETE UNUSED BUSINESS TYPE **/		
	@SuppressWarnings({"unused",  })
	@Override
	public String deleteUnusedBusinessType(String cifno, String oldBtype) {
		String flag = "";
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		try {
			param.put("cifno", cifno);
			int e = 0;
			e = dbService.executeUpdate("DELETE FROM Tbcifemployment WHERE mngempid IN (SELECT mngempid FROM Tbmanagement WHERE cifno=:cifno)", param);
			int b = 0;
			b = dbService.executeUpdate("DELETE FROM Tbcifbusiness WHERE mngbusid IN (SELECT mngempid FROM Tbmanagement WHERE cifno=:cifno)", param);
			int res = 0;
			res = dbService.executeUpdate("DELETE FROM Tbmanagement WHERE cifno=:cifno", param);
			if(res > 0){
				return flag = "success";							
			}else{
				flag = "failed";
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	/** UPDATE BUSINESS TYPE ONLY **/			
	@Override
	public String updateBusinessType(String cifno, String btype) {
		// TODO Auto-generated method stub
		
		String flag = "failed";
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		Tbcifcorporate corp = new Tbcifcorporate();
		
		//System.out.println(">>>>>>>>>> BTYPE : " + btype);
		try {
			param.put("cifno", cifno);
			corp = (Tbcifcorporate) dbService.executeUniqueHQLQuery("FROM Tbcifcorporate WHERE cifno=:cifno", param);
			if(corp!=null){
				corp.setBusinesstype(btype);
				if (dbService.saveOrUpdate(corp)) {
					flag = "success";
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;		
	}
	
	/** CHECK IF CIF NO ALREADY USED **/	
	@Override
	public String checkIfExisting(String cifno, String relatedcifno, String relcode, String ofcrposition, String poscategory) {
		// TODO Auto-generated method stub
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		String flag = "failed";
		Tbmanagement mg = new Tbmanagement();
		
		try {
			param.put("cifno", cifno);
			param.put("relatedcifno", relatedcifno);
			param.put("relcode", relcode);
			param.put("poscat", poscategory);
			System.out.println("cifno >>>> "+cifno+" relatedcifno >>>> "+relatedcifno+" relcode >>>> "+relcode+" ofcrposition >>>> "+ofcrposition);
			if(relcode.equalsIgnoreCase("OFF")){
				if(ofcrposition==null){
					System.out.println(" -------- CheckifExisting 1 --------");
					mg = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND relatedcifno=:relatedcifno AND relationshipcode=:relcode AND position IS NULL", param);
					if(mg==null){
						//System.out.println(">>>>>>>>>>>notexisting");
						return flag;
					}else{
						//System.out.println(">>>>>>>>>>>existing");
						System.out.println("--- Existing 1 ---");
						return flag = "success";
					}
				}else{
					System.out.println(" -------- CheckifExisting 2 ---------");
					param.put("pos", ofcrposition);
					mg = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND relatedcifno=:relatedcifno AND relationshipcode=:relcode AND position=:pos "
							+ "AND positioncategory=:poscat", param);
					if(mg==null){
						//System.out.println(">>>>>>>>>>>notexisting");
						return flag;
					}else{
						//System.out.println(">>>>>>>>>>>existing");
						System.out.println("--- Existing 2 ---");
						return flag = "success";
					}
				}
			}else{
				
				mg = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE cifno=:cifno AND relatedcifno=:relatedcifno AND relationshipcode=:relcode", param);
				if(mg==null){
					//System.out.println(">>>>>>>>>>>notexisting");
					return flag;
				}else{
					//System.out.println(">>>>>>>>>>>existing");
					return flag = "success";
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> mngmtList2(String cifno, String oldBtype) {
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		try {
			param.put("cif", cifno);
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno=:cif AND isautogenerated='true'", param);
			System.out.println(">>>>>>> list - " + list.size());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;		
	}

	@Override
	public Tbmanagement getGenManager(String cifno) {
		// TODO Auto-generated method stub
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> param = HQLUtil.getMap();
		Tbmanagement row = new Tbmanagement();
		
		try {
			param.put("cifno", cifno);
			row = (Tbmanagement) dbService.executeUniqueHQLQueryMaxResultOne("FROM Tbmanagement WHERE cifno=:cifno AND relationshipcode = 'GM'", param);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return row;		
	}

	//MAR 10-23-2020

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagementlos> mngmtList2RB(String cifno, String oldBtype) {
		DBService dbServiceCOOP = new DBServiceImpl();
		Map<String, Object> param = HQLUtil.getMap();
		List<Tbmanagementlos> list = new ArrayList<Tbmanagementlos>();
		try {
			param.put("cif", cifno);
			list = (List<Tbmanagementlos>) dbServiceCOOP.executeListHQLQuery("FROM Tbmanagementlos WHERE cifno=:cif AND isautogenerated='true'", param);
			System.out.println(">>>>>>> list - " + list.size());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;		
	}

	/** DELETE UNUSED BUSINESS TYPE **/		
	@SuppressWarnings({"unused",  })
	@Override
	public String deleteUnusedBusinessTypeRB(String cifno, String oldBtype) {
		String flag = "";
		DBService dbServiceCOOP = new DBServiceImpl();
		Map<String, Object> param = HQLUtil.getMap();
		try {
			param.put("cifno", cifno);
			int e = 0;
			e = dbServiceCOOP.executeUpdate("DELETE FROM Tblosemployment WHERE mngempid IN (SELECT mngempid FROM Tbmanagementlos WHERE cifno=:cifno)", param);
			int b = 0;
			b = dbServiceCOOP.executeUpdate("DELETE FROM Tblosbusiness WHERE mngbusid IN (SELECT mngempid FROM Tbmanagementlos WHERE cifno=:cifno)", param);
			int res = 0;
			res = dbServiceCOOP.executeUpdate("DELETE FROM Tbmanagementlos WHERE cifno=:cifno", param);
			if(res > 0){
				return flag = "success";							
			}else{
				flag = "failed";
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	//no dedupe Renz 02152020
	
	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listRegOwner(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '1'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listPartners(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '2'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listDirectorsTrustees(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '3'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listSignatories(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '4'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listShareholdersIndiv(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '5' and customertype = '1'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listShareholdersCorp(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '5' and customertype = '2'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listOfficers(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '6'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Tbmanagement> listGenMngr(String cifno) {
		List<Tbmanagement> list = new ArrayList<Tbmanagement>();
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		params.put("cifno", cifno);
		try {	
			list = (List<Tbmanagement>) dbService.executeListHQLQuery("FROM Tbmanagement WHERE cifno =:cifno AND mngempid = '7'",params);	
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@Override
	public String saveOrUpdateRegOwner(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setFirstname(ref.getFirstname());
			d.setMiddlename(ref.getMiddlename());
			d.setLastname(ref.getLastname());
			d.setDateofbirth(ref.getDateofbirth());
			d.setMngempid("1");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("1");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}

	@Override
	public String deleteRegOwner(Integer id) {

		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		String flag = "failed";
		params.put("id", id);
		try {
			if (id != null) {

				Integer res = dbService.executeUpdate("DELETE FROM TBMANAGEMENT WHERE id =:id", params);
				if (res != null && res == 1) {
					flag = "success";
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String saveOrUpdateDir(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setFirstname(ref.getFirstname());
			d.setMiddlename(ref.getMiddlename());
			d.setLastname(ref.getLastname());
			d.setDateofbirth(ref.getDateofbirth());
			d.setBoarddesignation(ref.getBoarddesignation());
			d.setMngempid("3");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("3");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}

	@Override
	public String deleteDir(Integer id) {

		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		String flag = "failed";
		params.put("id", id);
		try {
			if (id != null) {

				Integer res = dbService.executeUpdate("DELETE FROM TBMANAGEMENT WHERE id =:id", params);
				if (res != null && res == 1) {
					flag = "success";
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String saveOrUpdateOfficer(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setFirstname(ref.getFirstname());
			d.setMiddlename(ref.getMiddlename());
			d.setLastname(ref.getLastname());
			d.setDateofbirth(ref.getDateofbirth());
			d.setPosition(ref.getPosition());
			d.setMngempid("6");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("6");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}

	@Override
	public String deleteNew(Integer id) {

		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		String flag = "failed";
		params.put("id", id);
		try {
			if (id != null) {

				Integer res = dbService.executeUpdate("DELETE FROM TBMANAGEMENT WHERE id =:id", params);
				if (res != null && res == 1) {
					flag = "success";
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return flag;
	}

	@Override
	public String saveOrUpdateSignatory(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setFirstname(ref.getFirstname());
			d.setMiddlename(ref.getMiddlename());
			d.setLastname(ref.getLastname());
			d.setDateofbirth(ref.getDateofbirth());
			d.setSignatorylevel(ref.getSignatorylevel());
			d.setMngempid("4");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("4");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}

	@Override
	public String saveOrUpdateShareIndiv(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setFirstname(ref.getFirstname());
			d.setMiddlename(ref.getMiddlename());
			d.setLastname(ref.getLastname());
			d.setDateofbirth(ref.getDateofbirth());
			d.setNoofshares(ref.getNoofshares());
			d.setAmtsubscribed(ref.getAmtsubscribed());
			d.setOwnershippercentage(ref.getOwnershippercentage());
			d.setMngempid("5");
			d.setCustomertype("1");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("5");
			ref.setCustomertype("1");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}

	@Override
	public String saveOrUpdateShareCorp(Tbmanagement ref) {
		
		DBService dbService = new DBServiceImplCIF();
		Map<String, Object> params = HQLUtil.getMap();
		
		Tbmanagement d = new Tbmanagement();
		if(ref.getId() != null)
		{
			params.put("id", ref.getId());
			d = (Tbmanagement) dbService.executeUniqueHQLQuery("FROM Tbmanagement WHERE id=:id", params);
			d.setCifno(ref.getCifno());
			d.setCorporatename(ref.getCorporatename());
			d.setDateofincorporation(ref.getDateofincorporation());
			d.setNoofshares(ref.getNoofshares());
			d.setAmtsubscribed(ref.getAmtsubscribed());
			d.setOwnershippercentage(ref.getOwnershippercentage());
			d.setMngempid("5");
			d.setCustomertype("2");
			
			if(dbService.saveOrUpdate(d)) {
				System.out.println("UPDATE");
				return "update";
			}
		}
		else {
			ref.setMngempid("5");
			ref.setCustomertype("2");
			if(dbService.saveOrUpdate(ref)) {
				System.out.println("SAVE");
				return "success";
			}
		}
		return "failed";
	}
}
